#ifndef test_pattern_token_h
#define test_pattern_token_h

#include <lib.test/test.h>

bool test_pattern_tokens_invalid_argument_1 (Test *test);
bool test_pattern_tokens_invalid_argument_2 (Test *test);
bool test_pattern_tokens_function_call (Test *test);
bool test_pattern_tokens_1 (Test *test);
bool test_pattern_tokens_overflow (Test *test);
bool test_pattern_tokens_2 (Test *test);
bool test_pattern_tokens_3 (Test *test);
bool test_pattern_tokens_parentheses_open_function_call (Test *test);
bool test_pattern_tokens_parentheses_open (Test *test);
bool test_pattern_tokens_parentheses_mismatch (Test *test);
bool test_pattern_tokens_parentheses_close_parentheses_empty (Test *test);
bool test_pattern_tokens_parentheses_close_function_call (Test *test);
bool test_pattern_tokens_parentheses_close (Test *test);
bool test_pattern_tokens_not_missing_operand (Test *test);
bool test_pattern_tokens_not_invalid_operand (Test *test);
bool test_pattern_tokens_not_function_call (Test *test);
bool test_pattern_tokens_not (Test *test);
bool test_pattern_tokens_or_missing_left_operand (Test *test);
bool test_pattern_tokens_or_invalid_left_operand (Test *test);
bool test_pattern_tokens_or_missing_right_operand (Test *test);
bool test_pattern_tokens_or_invalid_right_operand (Test *test);
bool test_pattern_tokens_or_function_call (Test *test);
bool test_pattern_tokens_or (Test *test);
bool test_pattern_tokens_repeat_missing_operand (Test *test);
bool test_pattern_tokens_repeat_invalid_operand (Test *test);
bool test_pattern_tokens_repeat_missing_from (Test *test);
bool test_pattern_tokens_repeat_implicit_from (Test *test);
bool test_pattern_tokens_repeat_invalid_from (Test *test);
bool test_pattern_tokens_repeat_missing_close_bracket_1 (Test *test);
bool test_pattern_tokens_repeat_function_call_1 (Test *test);
bool test_pattern_tokens_repeat_missing_hyphen (Test *test);
bool test_pattern_tokens_repeat_missing_to (Test *test);
bool test_pattern_tokens_repeat_implicit_to (Test *test);
bool test_pattern_tokens_repeat_invalid_to (Test *test);
bool test_pattern_tokens_repeat_missing_close_bracket_2 (Test *test);
bool test_pattern_tokens_repeat_missing_close_bracket_3 (Test *test);
bool test_pattern_tokens_repeat_function_call_2 (Test *test);
bool test_pattern_tokens_repeat_1 (Test *test);
bool test_pattern_tokens_repeat_2 (Test *test);
bool test_pattern_tokens_repeat_3 (Test *test);
bool test_pattern_tokens_repeat_4 (Test *test);
bool test_pattern_tokens_repeat_5 (Test *test);
bool test_pattern_tokens_range_missing_from (Test *test);
bool test_pattern_tokens_range_implicit_from (Test *test);
bool test_pattern_tokens_range_invalid_from (Test *test);
bool test_pattern_tokens_range_missing_hyphen_1 (Test *test);
bool test_pattern_tokens_range_missing_hyphen_2 (Test *test);
bool test_pattern_tokens_range_missing_to (Test *test);
bool test_pattern_tokens_range_implicit_to (Test *test);
bool test_pattern_tokens_range_invalid_to (Test *test);
bool test_pattern_tokens_range_missing_close_bracket_1 (Test *test);
bool test_pattern_tokens_range_missing_close_bracket_2 (Test *test);
bool test_pattern_tokens_range_function_call (Test *test);
bool test_pattern_tokens_range_1 (Test *test);
bool test_pattern_tokens_range_2 (Test *test);
bool test_pattern_tokens_range_3 (Test *test);
bool test_pattern_tokens_range_4 (Test *test);
bool test_pattern_tokens_set_missing_value_1 (Test *test);
bool test_pattern_tokens_set_value_invalid_1 (Test *test);
bool test_pattern_tokens_set_missing_value_2 (Test *test);
bool test_pattern_tokens_set_missing_closing_bracket (Test *test);
bool test_pattern_tokens_set_function_call_1 (Test *test);
bool test_pattern_tokens_set_function_call_2 (Test *test);
bool test_pattern_tokens_set_1 (Test *test);
bool test_pattern_tokens_set_2 (Test *test);
bool test_pattern_tokens_set_3 (Test *test);
bool test_pattern_tokens_value_invalid (Test *test);
bool test_pattern_tokens_value_function_call (Test *test);
bool test_pattern_tokens_value (Test *test);
bool test_pattern_tokens_string_to_value (Test *test);
bool test_pattern_tokens_escape_to_value (Test *test);
bool test_pattern_tokens_escape_to_value_B (Test *test);
bool test_pattern_tokens_escape_to_value_o (Test *test);
bool test_pattern_tokens_escape_to_value_x (Test *test);
bool test_pattern_tokens_escapable_to_byte (Test *test);
bool test_pattern_token_is_syntax (Test *test);
bool test_pattern_token_is_octal (Test *test);
bool test_pattern_token_is_hexadecimal (Test *test);
bool test_pattern_token_is_binary (Test *test);

#endif
